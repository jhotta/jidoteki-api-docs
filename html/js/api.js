// Generated by CoffeeScript 1.6.3
/*
 * API Documentation JS
 * Copyright (c) 2013 Alex Williams, Unscramble <license@unscramble.jp>
 * https://github.com/unscramble/jidoteki-api-docs
*/


(function() {
  var $root, addLanguages, appendSections, loadFile, loadLeftMenu, loadSections, scrollToSection, scrollToSectionListener, scrolling, sections, switchLangListener;

  switchLangListener = function() {
    $('button.language').click(function() {
      $('pre.prettyprint').hide();
      $("pre.lang-" + this.title).show();
      $('button.language').attr('class', 'language');
      $(this).attr('class', 'language selected');
      if (scrolling.currentSection !== void 0) {
        window.location.hash = "#" + scrolling.currentSection;
      }
      return $root.stop().scrollTop($("#" + scrolling.currentSection).offset().top - 116);
    });
    return false;
  };

  addLanguages = function() {
    var lang, pushLang, x, _i, _len;
    pushLang = function(lang, x) {
      var selected;
      selected = x === 0 ? " selected" : "";
      return $('#language').append("<button class=\"language" + selected + "\" title=\"" + lang + "\">" + lang + "</a>");
    };
    for (x = _i = 0, _len = languagesArray.length; _i < _len; x = ++_i) {
      lang = languagesArray[x];
      pushLang(lang, x);
    }
    return switchLangListener();
  };

  loadLeftMenu = function() {
    return $('#menu').load('menu.html');
  };

  scrollToSection = function(href) {
    var scroll;
    scroll = {
      'scrollTop': $(href).offset().top - 116
    };
    $root.stop().animate(scroll, 500, 'swing', function() {
      return window.location.hash = href;
    });
    return false;
  };

  scrollToSectionListener = function() {
    return $('ul.menu-list li.section a').click(function() {
      var href;
      href = $.attr(this, 'href');
      $('ul.menu-list li.section a').removeAttr('class');
      $(this).attr('class', 'viewing');
      return scrollToSection(href);
    });
  };

  loadSections = function() {
    var curFile, section, _i, _len, _results;
    curFile = 0;
    _results = [];
    for (_i = 0, _len = sectionsArray.length; _i < _len; _i++) {
      section = sectionsArray[_i];
      _results.push(loadFile(section, function(results) {
        curFile++;
        return appendSections(curFile);
      }));
    }
    return _results;
  };

  sections = {};

  loadFile = function(file, callback) {
    return $(this).load("section-" + file + ".html", function(response) {
      sections[file] = response;
      console.log("Loaded file: section-" + file + ".html");
      return callback(response);
    });
  };

  appendSections = function(curFile) {
    var s, _i, _len;
    if (curFile === sectionsArray.length) {
      for (_i = 0, _len = sectionsArray.length; _i < _len; _i++) {
        s = sectionsArray[_i];
        $('#sections').append(sections[s]);
      }
      console.log("  Finished loading all the things!");
      $('pre').each(function(i, e) {
        return hljs.highlightBlock(e);
      });
      scrollToSectionListener();
      if (window.location.hash !== '') {
        if (window.location.hash !== '') {
          scrollToSection(window.location.hash);
        }
      }
      $('pre.prettyprint').hide();
      return $("pre.lang-" + languagesArray[0]).show();
    }
  };

  scrolling = {};

  $(document).scroll(function() {
    var position;
    position = $(window).scrollTop();
    return $('div.method-description h1').each(function() {
      var height, href, offset;
      offset = $(this).offset().top;
      height = $(this).parent().parent().height() - 116;
      if (offset + height > position) {
        href = $(this).attr('id');
        $('ul.menu-list li.section a').removeAttr('class');
        $("a[href=\"#" + href + "\"]").attr('class', 'viewing');
        scrolling.currentSection = href;
        return false;
      }
    });
  });

  $root = $('html, body');

  addLanguages();

  loadLeftMenu();

  loadSections();

}).call(this);
